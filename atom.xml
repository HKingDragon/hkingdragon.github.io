<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Dragon&#39;s Blog</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2022-04-26T10:20:05.140Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>Dragon</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>NTFS文件系统</title>
    <link href="http://example.com/2022/04/26/NTFS%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
    <id>http://example.com/2022/04/26/NTFS%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/</id>
    <published>2022-04-26T10:07:55.000Z</published>
    <updated>2022-04-26T10:20:05.140Z</updated>
    
    <content type="html"><![CDATA[<h1 id="NTFS文件系统"><a href="#NTFS文件系统" class="headerlink" title="NTFS文件系统"></a>NTFS文件系统</h1><h2 id="NTFS文件系统基本介绍"><a href="#NTFS文件系统基本介绍" class="headerlink" title="NTFS文件系统基本介绍"></a>NTFS文件系统基本介绍</h2><p><a href="https://www.dgxue.com/huifu/tag/ntfs/">NTFS</a><a href="https://www.dgxue.com/huifu/tag/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/">文件系统</a>是随着Windows NT操作系统的诞生而产生的，并随着Windows NT 4跨入主力文件系统的行列。它的优点是安全性和稳定性极其出色，在使用中不易产生文件碎片；同时它还提供了容错结构日志，可以将用户的操作全部记录下来，从而保护了系统的安全。</p><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ol><li><p>安全性</p></li><li><p>可恢复性</p></li><li><p>文件压缩</p></li><li><p>磁盘配额</p></li><li><p>B+树的文件管理</p><p>NTFS利用B＋树文件管理方法来跟踪文件在磁盘上的位置。在NTFS中文件名顺序存放，因而查找速度更快。如果卷比较大，B＋树会在宽度上增长，而不会在深度上增长，因此，当目录增大时，NTFS并没有显示出明显的性能下降。</p><p><img src="https://s2.loli.net/2022/04/26/U1sfOPLvzZxtaFm.png" alt="image-20220425090847401"></p></li></ol><h2 id="NTFS文件系统结构总览"><a href="#NTFS文件系统结构总览" class="headerlink" title="NTFS文件系统结构总览"></a>NTFS文件系统结构总览</h2><p>NTFS分区也被称为NTFS卷，卷上簇的大小，又称为卷因子，其大小是用户在创建NTFS卷时确定的。簇的大小一定是扇区大小的整数倍，通常是2n（n为整数）。</p><center><b>NTFS卷大小和簇大小关系表</b></center><table><thead><tr><th>卷大小（MB）</th><th>每簇的扇区</th><th>默认的簇大小</th></tr></thead><tbody><tr><td>≤512</td><td>1</td><td>512个字节</td></tr><tr><td>513～1024</td><td>2</td><td>1024个字节（1KB）</td></tr><tr><td>1025～2048</td><td>4</td><td>2048个字节（2KB）</td></tr><tr><td>≥2049</td><td>8</td><td>4KB</td></tr></tbody></table><p>NTFS文件系统使用了逻辑簇号（Logical Cluster Number，LCN）和虚拟簇号（Virtual Cluster Number，VCN）对卷进行管理。LCN是对卷的第一个簇到最后一个簇进行编号，只要知道LCN号和簇的大小以及NTFS卷在物理磁盘中的起始扇区（绝对扇区）就可以对簇进行定位，而这些信息在NTFS卷的引导扇区中可以找到（BPB参数）。找到簇在磁盘中的物理位置的计算公式是：</p><center>每簇扇区数×簇号＋卷的隐含扇区数（卷之前的扇区总数）＝簇的起始绝对扇区号</center><p>虚拟簇号（VCN）则是将特定文件的簇从头到尾进行编号，这样做的原因是方便系统对文件中的数据进行引用，VCN并不要求在物理上是连续的，要确定VCN的磁盘上的定位需先将其转换为LCN。</p><p>NTFS的第一个扇区为引导扇区，即DBR扇区。</p><p>在分区的第一个扇区（引导扇区DBR）后是15个扇区的NTLDR区域，这16个扇区共同构成$BOOT文件。在NTLDR后（但不一定是物理上相连的）是主文件表（Master File Table，MFT）区域，主文件表由文件记录构成，每个文件记录占2个扇区，文件记录简称为FR（File Record）。在FAT文件系统中是通过FAT表和文件目录项存储文件数据和记录文件的文件名、扩展名、建立时间、访问时间、修改时间、文件属性、文件大小、文件在磁盘中所占用的簇等信息进行管理的，而在NTFS文件系统中这些信息被称为属性，包括文件的内容在NTFS中也称为属性，各种属性被放入文件记录中进行管理。</p><p>NTFS文件系统的主文件表中还记录了一些非常重要的系统数据，这些数据被称为元数据（metadata）文件，简称为“元文件”，其中包括了用于文件定位和恢复的数据结构、引导程序数据及整个卷的分配位图等信息。NTFS文件系统将这些数据都当作文件进行管理，这些文件用户是不能访问的，它们的文件名的第一个字符都是“$”，表示该文件是隐藏的。在NTFS文件系统中，这样的文件主要有16个。</p><ul><li>MFT本身（$Mft）</li><li>MFT镜像（$MftMirr）</li><li>日志文件（$LogFile）</li><li>卷文件（$Volume）</li><li>属性定义表（$AttrDef）</li><li>根目录（$Root）</li><li>位图文件（$Bitmap）</li><li>引导文件（$Boot）</li><li>坏簇文件（$BadClus）</li><li>安全文件（$Secure）</li><li>大写文件（$UpCase）</li><li>扩展元数据文件（$Extended metadata directory）</li><li>重解析点文件（$Extend&#x2F;$Reparse）</li><li>变更日志文件（$Extend&#x2F;$UsnJrnl）</li><li>配额管理文件（$Extend&#x2F; $Quota）</li><li>对象ID文件（$Extend&#x2F;$ObjId）等</li></ul><p>这16个元数据文件总是占据着MFT的前16项记录，在这16项以后就是用户建立的文件和文件夹的记录了。</p><p>每个文件记录在主文件表中占据的磁盘空间一般为1KB，也就是两个扇区，NTFS文件系统分配给主文件表的区域大约占据了磁盘空间的12.5％，剩余的磁盘空间用来存放其他元文件和用户的文件。</p><center><b>NTFS文件系统的大致结构</b></center><p><img src="https://s2.loli.net/2022/04/26/pY6X2TnhNEiKu5I.png" alt="image-20220425091814165"></p><p><b>注：在NTFS文件系统所在分区的最后一个扇区是DBR的备份，但该扇区并不属于NTFS文件系统。</b></p><h2 id="NTFS文件系统引导扇区分析"><a href="#NTFS文件系统引导扇区分析" class="headerlink" title="NTFS文件系统引导扇区分析"></a>NTFS文件系统引导扇区分析</h2><p><a href="https://www.dgxue.com/huifu/tag/ntfs/">NTFS</a>文件系统的<a href="https://www.dgxue.com/huifu/tag/%E5%BC%95%E5%AF%BC%E6%89%87%E5%8C%BA/">引导扇区</a>是$Boot的第一个扇区，它的结构与FAT文件系统的DBR类似，所以习惯上也称该扇区为DBR扇区。DBR扇区在操作系统的引导过程起着非常重要的作用，如果这个扇区遭到破坏，系统将不能正常启动。</p><p>NTFS文件系统的DBR扇区与FAT文件系统的结构一样，也包括跳转指令、OEM代号、BPB参数、引导程序和结束标志。</p><center><b>NTFS文件系统的DBR扇区</b></center><p><img src="https://s2.loli.net/2022/04/26/fcJlYXUVZjG8m2i.png" alt="image-20220425092102932"></p><h3 id="跳转指令"><a href="#跳转指令" class="headerlink" title="跳转指令"></a>跳转指令</h3><p>跳转指令本身占用2字节，它将程序执行流程跳转到引导程序处。例如，当前DBR中的“EB 52”，就是代表汇编语言的“JMP 52”。</p><blockquote><p>注意：该指令本身占用2字节，计算跳转目标地址时以该指令的下一字节为基准，所以实际执行的下一条指令应该位于54H。紧接着跳转指令的是一条空指令NOP（90H）。</p></blockquote><h3 id="OEM代号"><a href="#OEM代号" class="headerlink" title="OEM代号"></a>OEM代号</h3><p>这部分占8字节，其内容由创建该文件系统的OEM厂商具体安排。例如，微软的Windows系统将此处直接设置为“NTFS”，在NTFS文件系统中也称为“文件系统ID”。</p><h3 id="BPB（BIOS参数块）"><a href="#BPB（BIOS参数块）" class="headerlink" title="BPB（BIOS参数块）"></a>BPB（BIOS参数块）</h3><p>BPB是BIOS Parameter Block的缩写，其含义为BIOS参数块。BPB从DBR的第12（0BH偏移处）个字节开始，到偏移53H结束，占用73个字节，记录了有关该文件系统的重要信息</p><center><b>NTFS文件系统BPB参数的含义</b></center><p><img src="https://s2.loli.net/2022/04/26/FoIJQZyYUHk1KXa.png" alt="image-20220425104726046"></p><center><b>NTFS的DBR参数模板</b></center><p><img src="https://s2.loli.net/2022/04/26/tiCPvyuVW3JhpBd.png" alt="image-20220425104820856"></p><ol><li>0BH～0CH：每扇区字节数</li></ol><p>​每扇区字节数记录每个逻辑扇区的大小，其常见值为512字节，但512并不是固定值，该值可以由程序定义，合法值包括512字节、1024字节、2048字节和4096字节。</p><ol start="2"><li>0DH～0DH：每簇扇区数</li></ol><p>​每簇扇区数记录着文件系统的簇大小，即由多少个扇区组成一个簇。</p><p>​如果这个分区是在系统安装前被格式化而来的，一般大于2GB的分区每簇默认占用8个扇区，也就是每簇大小为4KB，这个字节的内容就为十六进制值“08”。如果这个分区是由一个FAT分区转换而来，则每个簇一般占用1个扇区的空间，也就是每簇大小为512字节，这个字节的内容就是“01H”。</p><p>​在NTFS文件系统中所有的簇从0开始进行编号，每个簇都有一个自己的地址编号，并且从分区的第一个扇区就开始编簇。</p><ol start="3"><li>0EH～0FH：DBR保留扇区数</li></ol><p>​NTFS文件系统中DBR没有保留扇区，该值常为“0000”。</p><ol start="4"><li>10H～12H：总是0</li></ol><p>​这3个字节总是“00 00 00”。</p><ol start="5"><li>13H～14H：未用</li></ol><p>​这两个字节不用。</p><ol start="6"><li>15H～15H：介质描述符</li></ol><p>​这个字节为介质描述字节，一般硬盘为“F8H”；双面5.25英寸软盘为“F9H”；双面3.5英寸软盘RAM虚拟盘为“FAH”；3.5英寸、1.44MB的软盘一般为“F0H”。因为NTFS分区一定在硬盘上，所以此处常为16进制数“F8”。</p><ol start="7"><li>16H～17H：未用</li></ol><p>​这两个字节不用。</p><ol start="8"><li>18H～19H：每磁道扇区数</li></ol><p>​这是逻辑C&#x2F;H&#x2F;S中的一个参数，其值一般为63，NTFS已经不用此参数。</p><ol start="9"><li>1AH～1BH：磁头数</li></ol><p>​这是逻辑C&#x2F;H&#x2F;S中的一个参数，其值一般为255，NTFS已经不用此参数。</p><ol start="10"><li>1CH～1FH：隐藏扇区数</li></ol><p>​隐藏扇区数是指本分区之前使用的扇区数，该值与分区表中所描述的该分区的起始扇区号一致。对于主磁盘分区来讲，是MBR到该分区DBR之间的扇区数；对于扩展分区中的逻辑驱动器来讲，是其EBR到该分区DBR之间的扇区数。</p><ol start="11"><li>20H～23H：未用</li></ol><p>​这4字节不用。</p><ol start="12"><li>24H～27H：未用</li></ol><p>​这4字节不用，但总为80008000。</p><ol start="13"><li>28H～2FH：扇区总数</li></ol><p>​扇区总数是指分区的总扇区数。NTFS的BPB中记录的分区大小比分区表中记录的少一个扇区，因为分区最后一个扇区留给DBR备份使用了。</p><ol start="14"><li>30H～37H：$MFT的起始簇号</li></ol><p>​这8字节为$MFT的起始簇号，注意这个位置使用簇号定义的，而不是扇区号，并且该地址不是固定值。</p><ol start="15"><li>38H～3FH：$MFTMirr的起始簇号</li></ol><p>​这8字节为$MFTMirr的起始簇号，这个位置也使用簇号定义，而不是扇区号。$MFTMirr的地址也不是固定值的，可以在$MFT之后，也可以在$MFT之前。本例中，$MFTMirr的地址就在$MFT之前。</p><ol start="16"><li>40H～40H：文件记录的大小描述</li></ol><p>​这一个字节描述每个文件记录的簇数。注意该参数为带符号数，当其是负数时，说明每个文件记录的大小要小于每簇扇区数，在这种情况下，文件记录的大小用字节数表示，计算方法为：2-1×每个文件记录的簇数。例如，图4-401的DBR中该参数值为“F6H”，换算为十进制等于“-10”，所以每个文件记录的大小是2-1×-10＝210＝1024字节。</p><ol start="17"><li>41H～43H：未用</li></ol><p>​这3字节不用。</p><ol start="18"><li>44H～44H：索引缓冲的大小描述</li></ol><p>​这一个字节描述每个索引缓冲的簇数。注意该参数也是带符号数，当其是负数时，说明每个索引缓冲的大小要小于每簇扇区数，在这种情况下，索引缓冲的大小用字节数表示，计算方法为：2-1×每个索引缓冲的簇数。</p><ol start="19"><li>45H～47H：未用</li></ol><p>​这3字节不用。</p><ol start="20"><li>48H～4FH：卷序列号</li></ol><p>​这8字节为分区的逻辑序列号，也就是在命令行下输入DIR命令后显示的一排数据，这个序列号是硬盘格式化时随机产生的。</p><ol start="21"><li>50H～51H：校验和</li></ol><p>​BPB的最后四个字节是其校验和，一般都为0。</p><h3 id="引导程序"><a href="#引导程序" class="headerlink" title="引导程序"></a>引导程序</h3><p>NTFS的DBR引导程序占用426字节（54H～1FDH），其负责完成将系统文件NTLDR装入。对于一个没有安装操作系统的分区来讲，这段程序没有用处。</p><h3 id="结束标志"><a href="#结束标志" class="headerlink" title="结束标志"></a>结束标志</h3><p>NTFS的DBR引导程序占用426字节（54H～1FDH），其负责完成将系统文件NTLDR装入。对于一个没有安装操作系统的分区来讲，这段程序没有用处。</p><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><blockquote><p>以上5个部分共占用512字节，正好是1个扇区，这个扇区属于$BOOT文件的组成部分。该部分的内容中除了第5部分结束标志是固定不变之外，其余4部分都是不完全确定的，都因操作系统版本的不同而不同，也因硬盘的逻辑盘参数的变化而变化。</p></blockquote><h2 id="元文件-MFT分析"><a href="#元文件-MFT分析" class="headerlink" title="元文件$MFT分析"></a>元文件$MFT分析</h2><h3 id="NTFS文件系统的元文件"><a href="#NTFS文件系统的元文件" class="headerlink" title="NTFS文件系统的元文件"></a>NTFS文件系统的元文件</h3><p>在NTFS文件系统中，元文件主要有16个，包括MFT（<a href="https://www.dgxue.com/huifu/tag/mft/">$MFT</a>）、MFT镜像（$MFTMirr）、日志文件（$LogFile）、卷文件（$Volume）、属性定义表（$AttrDef）、根目录（$Root）、位图文件（$Bitmap）、引导文件（$Boot）、坏簇文件（$BadClus）、安全文件（$Secure）、大写文件（$UpCase）、扩展元数据文件（$Extended metadata directory）、重解析点文件（$Extend&#x2F;$Reparse）、变更日志文件（$Extend&#x2F;$UsnJrnl）、配额管理文件（$Extend&#x2F; $Quota）、对象ID文件（$Extend&#x2F;$ObjId）等，表4-30详细列出了这些元文件及它们的作用。</p><center><b>NTFS文件系统的元文件</b></center><table><thead><tr><th>序号</th><th>元文件</th><th>功能</th></tr></thead><tbody><tr><td>0</td><td>$MFT</td><td>主文件表本身，是每个文件的索引</td></tr><tr><td>1</td><td>$MFTMirr</td><td>主文件表的部分镜像</td></tr><tr><td>2</td><td>$LogFile</td><td>事务型日志文件</td></tr><tr><td>3</td><td>$Volume</td><td>卷文件，记录卷标等信息</td></tr><tr><td>4</td><td>$AttrDef</td><td>属性定义列表文件</td></tr><tr><td>5</td><td>$Root</td><td>根目录文件，管理根目录</td></tr><tr><td>6</td><td>$Bitmap</td><td>位图文件，记录了分区中簇的使用情况</td></tr><tr><td>7</td><td>$Boot</td><td>引导文件，记录了用于系统引导的数据情况</td></tr><tr><td>8</td><td>$BadClus</td><td>坏簇列表文件</td></tr><tr><td>9</td><td>$Quota（NTFS4）</td><td>在早期的Windows NT系统中此文件为磁盘配额信息</td></tr><tr><td>10</td><td>$Secure</td><td>安全文件</td></tr><tr><td>11</td><td>$UpCase</td><td>大小写字符转换表文件</td></tr><tr><td>12</td><td>$Extend metadata directory</td><td>扩展元数据目录</td></tr><tr><td>13</td><td>$Extend&#x2F;$Reparse</td><td>重解析点文件</td></tr><tr><td>14</td><td>$Extend&#x2F;$UsnJrnl</td><td>加密日志文件</td></tr><tr><td>15</td><td>$Extend&#x2F;$Quota</td><td>配额管理文件</td></tr><tr><td>16</td><td>$Extend&#x2F;$ObjId</td><td>对象ID文件</td></tr></tbody></table><h3 id="MFT文件介绍"><a href="#MFT文件介绍" class="headerlink" title="$MFT文件介绍"></a>$MFT文件介绍</h3><p>在NTFS文件系统中，磁盘上的所有数据都是以文件的形式出现的，即使是文件系统的管理信息也是以一组文件的形式存储的，即元文件。16个元文件中主文件表（$MFT）是一个非常重要的元文件，它由文件记录构成，每个文件记录占用2个扇区。</p><p>每个文件都有一个文件记录，包括元文件本身，而主文件表（$MFT）就是专门用来存储文件记录的一个元文件，在$MFT中前16个文件记录总是元文件的纪录。</p><p>由于$MFT文件本身的重要性，为了确保文件系统结构的可靠性，系统专门为它准备了一个镜像文件（$MFTMirr），也就是$MFT中的第2个记录。</p><p>$MFT中前16个文件记录总是元文件的记录，并且这16个文件记录的顺序是固定的，下面对这16个记录简单做一个介绍：</p><p>第1个记录就是$MFT自身的记录，也就是说$MFT首先对自己进行管理。</p><p>第2个记录是$MFTMirr的记录，也就是$MFT前4个文件记录的镜像。</p><p>第3个记录是日志文件（$LogFile）的记录，该文件是NTFS为实现可恢复性和安全性而设计的。当系统运行时，NTFS就会在日志文件中记录所有影响NTFS卷结构的操作，包括文件的创建和改变目录结构的命令，从而可在系统失败时能够恢复NTFS卷。</p><p>第4个记录是卷文件（$Volume）的记录，它包含卷名、NTFS的版本和一个标明该磁盘是否损坏的标志位，NTFS文件系统以此决定是否需要调用Chkdsk程序来进行修复。</p><p>第5个记录是属性定义表（$AttrDef，attribute definition table）的记录，其中存放着卷所支持的所有文件属性，并指出它们是否可以被索引和恢复等。</p><p>第6个记录是根目录（$ROOT）的记录，其中保存着该卷根目录下的所有文件和目录的索引。在访问一个文件后，NTFS就保留该文件的MFT引用，第二次就能够直接访问该文件。</p><p>第7个记录是位图文件（$Bitmap）的记录，NTFS卷的簇使用情况都保存在这个位图文件中，其中每一位（bit）代表卷中的一簇，标识该簇是空闲还是已分配。由于该文件可以很容易被扩大，所以，NTFS的卷可以很方便地动态扩大，而FAT格式的文件系统由于涉及FAT表的变化，所以不能随意对分区大小进行调整。</p><p>第8个记录是引导文件（$Boot）的记录，该文件中存放着操作系统的引导程序代码。该文件必须位于特定的磁盘位置才能够正确地引导系统，一般都是位于卷的最前面。</p><p>第9个记录是坏簇文件（$BadClus）的记录，它记录着该卷中所有损坏的簇号，防止系统对其进行分配使用。</p><p>第10个记录是安全文件（$Secure）的记录，它存储着整个卷的安全描述符数据库。NTFS文件和目录都有各自的安全描述符，为节省空间，NTFS将文件和目录的相同描述符存放在此公共文件中。</p><p>第11个记录为大写文件（$UpCase，upper case file）的记录，该文件包含一个大小写字符转换表。</p><p>第12个记录是扩展元数据目录（$Extended metadata directory）的记录。</p><p>第13个记录是重解析点文件（$Extend&#x2F;$Reparse）的记录。</p><p>第14个记录是变更日志文件（$Extend&#x2F;$UsnJrnl）的记录。</p><p>第15个记录是配额管理文件（$Extend&#x2F;$Quota）的记录。</p><p>第16个记录是对象ID文件（$Extend&#x2F;$ObjId）的记录。</p><p>第17～23记录是系统保留的记录，暂时不用，用于将来扩展。</p><p>从第24个记录开始存放用户文件的记录。</p><h2 id="文件记录分析"><a href="#文件记录分析" class="headerlink" title="文件记录分析"></a>文件记录分析</h2><h3 id="文件记录的结构"><a href="#文件记录的结构" class="headerlink" title="文件记录的结构"></a>文件记录的结构</h3><p>MFT以文件记录来实现对文件的管路，每个文件记录都对应着不同的文件，大小固定为1KB，也就是占用两个扇区。存放文件记录位置的第一个记录就称作“基本文件记录”。文件记录在MFT中物理上是连续的，从0开始依次按顺序编号。</p><p>文件记录由两部分构成，一部分是文件记录头，另一部分是属性列表。</p><center><b>文件记录的结构</b></center><table><thead><tr><th>结构</th><th>说明</th></tr></thead><tbody><tr><td>文件记录头</td><td></td></tr><tr><td>属性1</td><td></td></tr><tr><td>属性2</td><td></td></tr><tr><td>……</td><td></td></tr><tr><td>结束标志</td><td>“FFFFFFFFH”</td></tr></tbody></table><h3 id="文件记录头的结构"><a href="#文件记录头的结构" class="headerlink" title="文件记录头的结构"></a>文件记录头的结构</h3><center><b>NTFS文件记录头信息</b></center><table><thead><tr><th>字节偏移</th><th>字段长度（字节）</th><th>字段名和含义</th></tr></thead><tbody><tr><td>0x00</td><td>4</td><td>MFT标志，一定为字符串“FILE”</td></tr><tr><td>0x04</td><td>2</td><td>更新序列号（Update Sequence Number）的偏移</td></tr><tr><td>0x06</td><td>2</td><td>更新序列号的大小与数组，包括第一个字节</td></tr><tr><td>0x08</td><td>8</td><td>日志文件序列号（$LogFile Sequence Number，LSN）</td></tr><tr><td>0x10</td><td>2</td><td>序列号（Sequence Number）</td></tr><tr><td>0x12</td><td>2</td><td>硬连接数（Hard Link Count），即有多少目录指向该文件</td></tr><tr><td>0x14</td><td>2</td><td>第一个属性的偏移地址</td></tr><tr><td>0x16</td><td>2</td><td>标志（Flag），00H表示文件被删除，01H表示文件正在使用，02H表示目录被删除，03H表示目录正在使用</td></tr><tr><td>0x18</td><td>4</td><td>文件记录的实际长度</td></tr><tr><td>0x1C</td><td>4</td><td>文件记录的分配长度</td></tr><tr><td>0x20</td><td>8</td><td>基本文件记录中的文件索引号</td></tr><tr><td>0x28</td><td>2</td><td>下一属性ID，当增加新的属性时，将该值分配给新属性，然后该值增加，如果MFT记录重新使用，则将它置0，第一个实例总是0</td></tr><tr><td>0x2A</td><td>2</td><td>边界，Windows XP中为偏移0x30处</td></tr><tr><td>0x2C</td><td>4</td><td>文件记录参考号，Windows XP中使用，Windows 2000中无此参数</td></tr><tr><td>0x30</td><td>2</td><td>更新序列号</td></tr><tr><td>0x32</td><td>4</td><td>更新数组</td></tr></tbody></table>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;NTFS文件系统&quot;&gt;&lt;a href=&quot;#NTFS文件系统&quot; class=&quot;headerlink&quot; title=&quot;NTFS文件系统&quot;&gt;&lt;/a&gt;NTFS文件系统&lt;/h1&gt;&lt;h2 id=&quot;NTFS文件系统基本介绍&quot;&gt;&lt;a href=&quot;#NTFS文件系统基本介绍&quot; cla</summary>
      
    
    
    
    <category term="数据恢复" scheme="http://example.com/categories/%E6%95%B0%E6%8D%AE%E6%81%A2%E5%A4%8D/"/>
    
    
    <category term="文件系统" scheme="http://example.com/tags/%E6%96%87%E4%BB%B6%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
</feed>
